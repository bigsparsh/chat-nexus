generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  user_id String @id @default(cuid())
  name String
  email String @unique
  address String?
  image String
  phone String?
  
  user1 Friend[] @relation("user1")
  user2 Friend[] @relation("user2")

  posts Post[]
  comments Comment[]
  commentPreferences CommentPreference[]
  postPreference PostPreference[]

  @@index([user_id])
}

model Friend {
  friend_id String @id @default(cuid())  
  user1_id String
  user2_id String
  mutual Boolean

  user1 User @relation("user1", fields: [user1_id], references: [user_id], onDelete: Cascade)
  user2 User @relation("user2", fields: [user2_id], references: [user_id], onDelete: Cascade)

  @@index([friend_id])
}

model Post {
  post_id String @id @default(cuid())  
  userId String
  image String?
  message String?

  preferences PostPreference[]
  user User @relation(fields: [userId], references: [user_id], onDelete: Cascade)

  comments Comment[]

  @@index([post_id])
}

model Comment {
  comment_id String @id @default(cuid())  
  message String
  userId String
  postId String


  preferences CommentPreference[]
  post Post @relation(fields: [postId], references: [post_id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [user_id], onDelete: Cascade)

  @@index([comment_id])
}

model PostPreference {
  post_preference_id String @id @default(cuid())  
  userId String 
  postId String
  preference Boolean

  user User @relation(fields: [userId], references: [user_id], onDelete: Cascade)
  post Post @relation(fields: [postId], references: [post_id], onDelete: Cascade)

  @@index([post_preference_id])
}


model CommentPreference {
  comment_preference_id String @id @default(cuid())  
  userId String 
  commentId String
  preference Boolean

  user User @relation(fields: [userId], references: [user_id], onDelete: Cascade)
  comment Comment @relation(fields: [commentId], references: [comment_id], onDelete: Cascade)
  @@index([comment_preference_id])
}
